/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Owner;

import java.awt.event.ActionListener;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mssql.DBConnect;

/**
 *
 * @author Asus
 */
public class OwnerTransPan extends javax.swing.JPanel {

    /**
     * Creates new form OwnerTransPan
     */
    String sortBy = " order by date_ DESC ";
    String days, from, to;
    DBConnect dbc;
    ResultSet rs;

    
    public OwnerTransPan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        sort = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        dayIn = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        toIn = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        fromIn = new javax.swing.JTextField();
        filterDays = new javax.swing.JButton();
        filterAmount = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        sum = new javax.swing.JLabel();

        setBackground(new java.awt.Color(252, 233, 192));
        setMaximumSize(new java.awt.Dimension(1570, 900));
        setMinimumSize(new java.awt.Dimension(1570, 900));
        setPreferredSize(new java.awt.Dimension(1570, 900));

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Back.png"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        Table.setBackground(new java.awt.Color(204, 255, 255));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction ID", "Type", "Amount", "Balance", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        jLabel10.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel10.setText("Sort by : ");

        sort.setBackground(new java.awt.Color(255, 255, 204));
        sort.setFont(new java.awt.Font("Californian FB", 0, 24)); // NOI18N
        sort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Date Newer", "Date Older", "Amount Max", "Amount Min" }));
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel11.setText("Last");

        dayIn.setFont(new java.awt.Font("Californian FB", 0, 24)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel13.setText("Days");

        jLabel14.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel14.setText("Amount between");

        toIn.setFont(new java.awt.Font("Californian FB", 0, 24)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel15.setText("and");

        fromIn.setFont(new java.awt.Font("Californian FB", 0, 24)); // NOI18N

        filterDays.setBackground(new java.awt.Color(204, 255, 204));
        filterDays.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        filterDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterDaysActionPerformed(evt);
            }
        });

        filterAmount.setBackground(new java.awt.Color(204, 255, 204));
        filterAmount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        filterAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterAmountActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N
        jLabel16.setText("Filter by : ");

        sum.setFont(new java.awt.Font("Californian FB", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(351, 351, 351)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dayIn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel14))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(fromIn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGap(35, 35, 35)
                                        .addComponent(toIn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filterAmount)
                                    .addComponent(filterDays)))
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 643, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sum)
                .addGap(320, 320, 320))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dayIn)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filterDays)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toIn)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fromIn))
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filterAmount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sum)
                                .addGap(73, 73, 73)))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortActionPerformed

    private void sortQuery()
    {
        //Date Newer, Date Older, Amount Max, Amount Min
        if( sort.getSelectedItem().toString().equals("Date Newer") )
        {
            sortBy = " order by date_ DESC ";
        }
        
        else if( sort.getSelectedItem().toString().equals("Date Older") )
        {
            sortBy = " order by date_ ASC ";
        }
        
        else if( sort.getSelectedItem().toString().equals("Amount Max") )
        {
            sortBy = " order by amount DESC ";
        }
        
        else if( sort.getSelectedItem().toString().equals("Amount Min") )
        {
            sortBy = " order by amount ASC ";
        }
    }
    private void filterDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterDaysActionPerformed
        // TODO add your handling code here:
        days = dayIn.getText();
        
        if(days.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter number of days");

        }
        
        else
        {
            
            sortQuery();
            
            try{
            dbc = new DBConnect();
            dbc.connectToDB();
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.setRowCount(0);
            rs = dbc.queryToDB("select * from Transactions " +
                                "where date_ > (SELECT DATEADD(DAY, -"+days+", GETDATE()) )"+
                                sortBy);
            
            while(rs.next())
            {
                String Tid = String.valueOf(rs.getInt("transaction_id"));
                
                String category = rs.getString("type");
                String amount = String.valueOf(rs.getFloat("total_amount"));
                String balance = String.valueOf(rs.getFloat("balance"));
                String Transtime = String.valueOf(rs.getTimestamp("date_"));                
                String TableData[] = {Tid,category,amount,balance,Transtime};
                DefaultTableModel Tmodel = (DefaultTableModel) Table.getModel();
                Tmodel.addRow(TableData);
            }
            
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);

            }
        }
        
    }//GEN-LAST:event_filterDaysActionPerformed

    private void filterAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterAmountActionPerformed
        // TODO add your handling code here:
        from = fromIn.getText();
        to = toIn.getText();
        
        if(from.isEmpty() || to.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter amounts");

        }
        
        else
        {
            sortQuery();
            try{
            dbc = new DBConnect();
            dbc.connectToDB();
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.setRowCount(0);
            rs = dbc.queryToDB("select * from Transactions " +
                                "where total_amount between "+from+" and "+to+
                                sortBy);
            
            //rs2 = dbc.queryToDB
            while(rs.next())
            {
                String Tid = String.valueOf(rs.getInt("transaction_id"));
                
                String category = rs.getString("type");
                String amount = String.valueOf(rs.getFloat("total_amount"));
                String balance = String.valueOf(rs.getFloat("balance"));
                String Transtime = String.valueOf(rs.getTimestamp("date_"));                
                String TableData[] = {Tid,category,amount,balance,Transtime};
                DefaultTableModel Tmodel = (DefaultTableModel) Table.getModel();
                Tmodel.addRow(TableData);
            }

            
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);

            }
        }
    }//GEN-LAST:event_filterAmountActionPerformed
    
     public void addEventBack(ActionListener event){
        backBtn.addActionListener(event);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField dayIn;
    private javax.swing.JButton filterAmount;
    private javax.swing.JButton filterDays;
    private javax.swing.JTextField fromIn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> sort;
    private javax.swing.JLabel sum;
    private javax.swing.JTextField toIn;
    // End of variables declaration//GEN-END:variables
}
